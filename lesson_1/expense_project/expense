#! /usr/bin/env ruby

require "pg"

class CLI
  def initialize
    @expense_data = ExpenseData.new
  end

  def display_help
    puts <<~HELP
    Commands:
    
    add AMOUNT MEMO - record a new expense
    clear - delete all expenses
    list - list all expenses
    delete NUMBER - remove expense with id NUMBER
    search QUERY - list expenses with a matching memo field
    HELP
  end

  def run(arguments)
    command = arguments.shift

    case command
    when "add"
      amount = arguments[0]
      memo = arguments[1]
      abort "You must provide an amount and memo." unless amount && memo
      @expense_data.add_expense(amount, memo)
    when "list"
      @expense_data.list_expenses
    else
      display_help
    end
  end
end

class ExpenseData

  def initialize
    @connection = PG.connect(dbname: "expenses")
  end

  def list_expenses
    result = @connection.exec("SELECT * FROM expenses ORDER BY created_on ASC;")
    result.each do |row|
      columns = [row["id"].rjust(3),
                 row["created_on"].rjust(10),
                 row["amount"].rjust(12),
                 row["memo"]]
  
      puts columns.join(" | ")
    end
  end

  def add_expense(amount, memo)
    sql = "INSERT INTO expenses (amount, memo, created_on) VALUES ($1, $2, $3)"
    params = [amount, memo, "NOW()"]
    @connection.exec_params(sql, params)
  end
end

CLI.new.run(ARGV)
